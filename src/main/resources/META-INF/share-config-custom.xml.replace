<!-- Share configuration related to this particular Share module extension, such as: - Doclib action config - Form config - Aspect and Type config Note. Any configuration related to 
    the whole Share.war webapp (i.e. not specific to this share extension) should be placed in the environment specific config: alfresco/tomcat/shared/classes/alfresco/web-extension/share-config-custom.xml 
    file -->
<alfresco-config>
   <!-- Document Library config section -->
   <config evaluator="string-compare" condition="DocumentLibrary" replace="true">

      <!-- Document List -->
      <doclist>
         <!--
            Bean that implements DoclistDataUrlResolver interface to resolve which url that the surf-doclist webscript
            shall use when asking the repository for nodes.
          -->
         <data-url-resolver>resolver.doclib.doclistDataUrl</data-url-resolver>
         
         
      </doclist>

      <!-- This defines a set of modes for pickers (e.g. the copy/move to picker, etc) that should be hidden. 
           The mode names correlate to values in the Alfresco.module.DoclibGlobalFolder JavaScript widget.
           By default no view modes will be hidden, each view mode should be added as the value of it's own
           <mode> element.
        -->
      <hidden-picker-view-modes></hidden-picker-view-modes>
       
      <tree>
         <!--
            Whether the folder Tree component should enumerate child folders or not.
            This is a relatively expensive operation, so should be set to "false" for Repositories with broad folder structures.
         -->
         <evaluate-child-folders>true</evaluate-child-folders>
         
         <!--
            Optionally limit the number of folders shown in treeview throughout Share.
         -->
         <maximum-folder-count>-1</maximum-folder-count>
         
         <!--  
            Default timeout in milliseconds for folder Tree component to recieve response from Repository
         -->
         <timeout>7000</timeout>
      </tree>

      <!--
         Used by the "Manage Aspects" action and Rules pages

         For custom aspects, remember to also add the relevant i18n string(s)
            aspect.cm_myaspect=My Aspect
      -->
      <aspects>

         <!--
            Aspects that a user can see in UI.
            Used by Rules, aspects are the listed aspects for rule's "has-aspect" action condition.
         -->
         <visible>
            <aspect name="cm:generalclassifiable" />
            <aspect name="cm:complianceable" />
            <aspect name="cm:dublincore" />
            <aspect name="cm:effectivity" />
            <aspect name="cm:summarizable" />
            <aspect name="cm:versionable" />
            <aspect name="cm:templatable" />
            <aspect name="cm:emailed" />
            <aspect name="emailserver:aliasable" />
            <aspect name="cm:taggable" />
            <aspect name="app:inlineeditable" />
            <aspect name="cm:geographic" />
            <aspect name="exif:exif" />
            <aspect name="audio:audio" />
            <aspect name="cm:indexControl" />
            <aspect name="dp:restrictable" />
         </visible>

         <!--
            Aspects that a user can add in UI.
            Used by Rules, aspects are the listed aspects for rule's "add-features" action.
            Same as "visible" if left empty.
         -->
         <addable>
         </addable>

         <!--
            Aspects that a user can remove in UI.
            Used by Rules, aspects are the listed aspects for rule's "remove-features" action.
            Same as "visible" if left empty
         -->
         <removeable>
         </removeable>
      </aspects>

      <!--
         Used by the "Change Type" action.
         Used by Rules:
          - parent types are the listed types for rule's "is-subtype" action condition
          - sub types are the listed types for rule's "specialise-type" action

         Define valid subtypes using the following example:
            <type name="cm:content">
               <subtype name="cm:mysubtype" />
            </type>

         Remember to also add the relevant i18n string(s):
            type.cm_mysubtype=My SubType
      -->
      <types>
         <type name="cm:content">
         </type>

         <type name="cm:folder">
         </type>

         <type name="trx:transferTarget">
               <subtype name="trx:fileTransferTarget" />
         </type>
      </types>

      <!--
         If set, will present a WebDAV link for the current item on the Document and Folder details pages.
      -->
      <!--
      <repository-url>http://localhost:8080/alfresco</repository-url>
      -->

      <!--
         File upload configuration
      -->
      <file-upload>
         <!--
            Adobe Flash???
            In certain environments, an HTTP request originating from Flash cannot be authenticated using an existing session.
            See: http://bugs.adobe.com/jira/browse/FP-4830
            For these cases, it is useful to disable the Flash-based uploader for Share Document Libraries.
         -->
         <adobe-flash-enabled>true</adobe-flash-enabled>
         
         <!--
            In order to support drag-and-drop file upload a browser must be able to support the HTML5 drag-and-drop events, however
            if the browser does not support the FormData type (that allows streamed multipart file uploads) then all files need to be
            loaded into the browser's memory before being uploaded to the server. In order to prevent potential memory related errors,
            a limit is set for the sum of all file sizes being uploaded in a single operation (specified in bytes).
            As of April 2011, the only known browser that requires this restriction is Firefox 3.6.
          -->
         <in-memory-limit>262144000</in-memory-limit>
         <!--
            The maximum number of bytes per file that Share will allow to be uploaded.
            A value of 0 means that any size is allowed.
         -->
         <maximum-file-size-limit>0</maximum-file-size-limit>
      </file-upload>

      <!--
         Sorting Options

         The 'sort' config element contains the name of the content model field to sort against and can be of the form:
         - short QName string e.g. "cm:name"
         - any other valid sortable fts-alfresco special field e.g. "TYPE"
         
         The field can be optionally followed by |true or |false to indicate sort direction,
         where true = ascending, false = descending
      -->
      <sorting>
         <sort label="label.name">cm:name|true</sort>
         <sort label="label.popularity">cm:likesRatingSchemeCount|false</sort>
         <sort label="label.title">cm:title</sort>
         <sort label="label.description">cm:description</sort>
         <sort label="label.created">cm:created</sort>
         <sort label="label.creator">cm:creator</sort>
         <sort label="label.modified">cm:modified</sort>
         <sort label="label.modifier">cm:modifier</sort>
         <sort label="label.size">cm:content.size</sort>
         <sort label="label.mimetype">cm:content.mimetype</sort>
         <sort label="label.type">TYPE</sort>
      </sorting>
      
      <!--
         Filter configurations
      -->
      <filters>
         <!--
            The maximum number of tags to display in the Tags filter, can be set to -1 for all tags
         -->
         <maximum-tag-count>100</maximum-tag-count>
      </filters>
      
      <!--
         Status Indicators
      -->
      <indicators>
         <!-- Being edited by current user -->
         <indicator id="editing" index="10">
            <evaluator>evaluator.doclib.indicator.editing</evaluator>
         </indicator>
         <!-- Locked by current user -->
         <indicator id="lock-owner" index="10">
            <evaluator>evaluator.doclib.indicator.lockOwner</evaluator>
         </indicator>
         <!-- Locked with owner identified by cm:owner property -->
         <indicator id="locked" index="10" icon="lock-owner-16.png">
            <evaluator>evaluator.doclib.indicator.lockedOwner</evaluator>
            <labelParam index="0">{jsNode.properties.owner.displayName}</labelParam>
            <labelParam index="1">{jsNode.properties.owner.userName}</labelParam>
         </indicator>
         <!-- Locked with owner identified by cm:lockOwner property -->
         <indicator id="nodeLock" index="10" icon="lock-owner-16.png" label="status.locked">
            <evaluator>evaluator.doclib.indicator.nodeLocked</evaluator>
            <labelParam index="0">{jsNode.properties.cm_lockOwner.displayName}</labelParam>
            <labelParam index="1">{jsNode.properties.cm_lockOwner.userName}</labelParam>
            <override>locked</override>
         </indicator>
         <!-- Workflows -->
         <indicator id="active-workflows" index="20">
            <evaluator>evaluator.doclib.indicator.activeWorkflows</evaluator>
            <labelParam index="0">{activeWorkflows}</labelParam>
         </indicator>
         <indicator id="simple-workflow" index="30">
            <evaluator>evaluator.doclib.indicator.simpleWorkflow</evaluator>
         </indicator>
         <!-- Everything Else -->
         <indicator id="rules" index="40">
            <evaluator>evaluator.doclib.indicator.rules</evaluator>
         </indicator>
         <indicator id="exif" index="40">
            <evaluator>evaluator.doclib.indicator.exifMetadata</evaluator>
         </indicator>
         <indicator id="geographic" index="50">
            <evaluator>evaluator.doclib.indicator.geographicMetadata</evaluator>
         </indicator>
         <indicator id="transferred-node" index="60">
            <evaluator>evaluator.doclib.indicator.transferredNode</evaluator>
         </indicator>
         <indicator id="cloud-synced" index="70" action="onCloudSyncIndicatorAction">
            <evaluator>evaluator.doclib.indicator.isSynced</evaluator>
         </indicator>
         <indicator id="cloud-sync-failed" index="80" action="onCloudSyncFailedIndicatorAction">
            <evaluator>evaluator.doclib.indicator.isSyncFailed</evaluator>
            <override>cloud-synced</override>
         </indicator>
         <indicator id="cloud-indirect-sync" index="90" action="onCloudIndirectSyncIndicatorAction">
            <evaluator>evaluator.doclib.indicator.isIndirectSync</evaluator>
            <override>cloud-synced</override>
         </indicator>
         <indicator id="cloud-indirect-sync-failed" index="90" action="onCloudIndirectSyncFailedIndicatorAction">
            <evaluator>evaluator.doclib.indicator.isIndirectSyncFailed</evaluator>
            <override>cloud-sync-failed</override>
            <override>cloud-indirect-sync</override>
         </indicator>
      </indicators>

      <!--
         Custom Metadata Templates for the Document Library Browse View

         Use view="simple" or view="detailed" to limit the display to one particular view.
      -->
      <metadata-templates>
         <!-- Default (fallback) -->
         <template id="default">
            <banner index="10" id="lockBanner" evaluator="evaluator.doclib.metadata.hasLockBanner">{lockBanner}</banner>
            <banner index="20" id="syncTransientError" evaluator="evaluator.doclib.metadata.hasSyncTransientErrorBanner">{syncTransientError}</banner>
            <banner index="30" id="syncFailed" evaluator="evaluator.doclib.metadata.hasSyncFailedBanner">{syncFailed}</banner>
            <line index="10" id="date">{date}{size}</line>
            <line index="20" id="description" view="detailed">{description}</line>
            <line index="30" id="tags" view="detailed">{tags}</line>
            <line index="40" id="categories" view="detailed" evaluator="evaluator.doclib.metadata.hasCategories">{categories}</line>
            <line index="50" id="social" view="detailed">{social}</line>
         </template>
         
            <!-- EXIFアスペクトありのWorkingCopy -->
            <template id="isWorkingCopyWithExif">
                <evaluator>evaluator.doclib.metadata.hasExif</evaluator>
                <evaluator>evaluator.doclib.metadata.isWorkingCopy</evaluator>
                <banner index="10" id="lockBanner" evaluator="evaluator.doclib.metadata.hasLockBanner">{lockBanner}</banner>
                <banner index="20" id="syncTransientError" evaluator="evaluator.doclib.metadata.hasSyncTransientErrorBanner">{syncTransientError}</banner>
                <banner index="30" id="syncFailed" evaluator="evaluator.doclib.metadata.hasSyncFailedBanner">{syncFailed}</banner>
                <line index="10" id="date">{date}{size}</line>
                <line index="20" id="exif_pixelDimension">{exif_pixelXDimension label.exif_pixelXDimension} {exif_pixelYDimension label.exif_pixelYDimension}
                </line>
                <line index="30" id="exif_exposureTime" view="detailed">{exif_exposureTime label.exif_exposureTime}</line>
                <line index="40" id="exif_fNumber" view="detailed">{exif_fNumber label.exif_fNumber}</line>
            </template>
            
            <!-- EXIFアスペクトあり -->
            <template id="hasExif">
                <evaluator>evaluator.doclib.metadata.hasExif</evaluator>
                <line index="10" id="date">{date}{size}</line>
                <line index="20" id="exif_pixelDimension">{exif_pixelXDimension label.exif_pixelXDimension} {exif_pixelYDimension label.exif_pixelYDimension}
                </line>
                <line index="30" id="exif_exposureTime" view="detailed">{exif_exposureTime label.exif_exposureTime}</line>
                <line index="40" id="exif_fNumber" view="detailed">{exif_fNumber label.exif_fNumber}</line>
                <line index="50" id="tags" view="detailed">{tags}</line>
                <line index="60" id="categories" view="detailed" evaluator="evaluator.doclib.metadata.hasCategories">{categories}</line>
                <line index="70" id="social" view="detailed">{social}</line>
            </template>
            
         <!-- Working Copies -->
         <template id="isWorkingCopy">
            <evaluator>evaluator.doclib.metadata.isWorkingCopy</evaluator>
            <banner index="10" id="lockBanner" evaluator="evaluator.doclib.metadata.hasLockBanner">{lockBanner}</banner>
            <banner index="20" id="syncTransientError" evaluator="evaluator.doclib.metadata.hasSyncTransientErrorBanner">{syncTransientError}</banner>
            <banner index="30" id="syncFailed" evaluator="evaluator.doclib.metadata.hasSyncFailedBanner">{syncFailed}</banner>
            <line index="10" id="date">{date}{size}</line>
            <line index="20" id="description" view="detailed">{description}</line>
         </template>

         <!-- Dictionary Models -->
         <template id="dictionaryModel">
            <evaluator>evaluator.doclib.metadata.isDictionaryModel</evaluator>
            <banner index="10" id="lockBanner" evaluator="evaluator.doclib.metadata.hasLockBanner">{lockBanner}</banner>
            <banner index="20" id="syncTransientError" evaluator="evaluator.doclib.metadata.hasSyncTransientErrorBanner">{syncTransientError}</banner>
            <banner index="30" id="syncFailed" evaluator="evaluator.doclib.metadata.hasSyncFailedBanner">{syncFailed}</banner>
            <line index="10" id="date">{date}</line>
            <line index="20" id="description" view="detailed">{description}</line>
            <line index="30" id="dictionaryModel" simpleView="true">{modelActive label.modelActive}{modelName label.modelName}{modelDescription label.modelDescription}</line>
         </template>

         <!-- Replication Transfer Targets -->
         <template id="transferTarget">
            <evaluator>evaluator.doclib.metadata.isTransferTarget</evaluator>
            <banner index="10" id="lockBanner" evaluator="evaluator.doclib.metadata.hasLockBanner">{lockBanner}</banner>
            <banner index="20" id="syncTransientError" evaluator="evaluator.doclib.metadata.hasSyncTransientErrorBanner">{syncTransientError}</banner>
            <banner index="30" id="syncFailed" evaluator="evaluator.doclib.metadata.hasSyncFailedBanner">{syncFailed}</banner>
            <line index="10" id="date">{date}</line>
            <line index="20" id="description" view="detailed">{description}</line>
            <line index="30" id="transferTarget" simpleView="true">{trx_enabled label.trx_enabled}{trx_endpointhost label.trx_endpointhost}{trx_endpointport label.trx_endpointport}</line>
         </template>
      </metadata-templates>

      <!--
         Create Content menu items, can be of 3 types matching the usual doclib action config:

         * "link" - accepts a "href" param that will be passed a nodeRef token for substitution, used for external links
         * "pagelink" - accepts a "page" param that will be passed a nodeRef token for substitution, used for Share links
         * "javascript" - accepts & "function" param of an action that will get the current folder item as first argument.

         I.e.
         <content id="plain-text" label="create-content.text" icon="text" type="pagelink">
            <param name="page">create-content?destination={nodeRef}&amp;itemId=cm:content&amp;mimeType=text/plain</param>
            <permissions>
               <permission allow="true">SomeUserPermissions</permission>
            </permissions>
         </content>

         Note that the "CreateChildren" permission is always required and will disable the entire menu if no granted for a folder.

         Also note that the old/untyped simple config still is allowed, the config snippet below will automatically be
         converted to a "pagelink" as in the example above.
         <content id="plain-text" label="create-content.text" icon="text" itemid="cm:content" mimetype="text/plain" permission="SomeUserPermissions"/>
      -->
      <create-content>
         <content id="plain-text" label="create-content.text" type="pagelink" index="10" icon="text">
            <param name="page">create-content?destination={nodeRef}&amp;itemId=cm:content&amp;mimeType=text/plain</param>
         </content>
         <content id="html" label="create-content.html" type="pagelink" index="20">
            <param name="page">create-content?destination={nodeRef}&amp;itemId=cm:content&amp;mimeType=text/html</param>
         </content>
         <content id="xml" label="create-content.xml" type="pagelink" index="30">
            <param name="page">create-content?destination={nodeRef}&amp;itemId=cm:content&amp;mimeType=text/xml</param>
         </content>
         <content id="folder" label="create-content.folder" icon="folder" index="5" type="javascript">
            <param name="function">onNewFolder</param>
         </content>
      </create-content>

      <create-content-by-template>true</create-content-by-template>

      <multi-select>
         <action type="action-link" id="onActionDownload" icon="document-download" label="menu.selected-items.download" />
         <action type="action-link" id="onActionCopyTo" icon="document-copy-to" label="menu.selected-items.copy" />
         <action type="action-link" id="onActionMoveTo" icon="document-move-to" permission="Delete" label="menu.selected-items.move"/>
         <action type="action-link" id="onActionAssignWorkflow" asset="document" icon="document-assign-workflow" label="menu.selected-items.assign-workflow"/>
         <action type="action-link" id="onActionDelete" icon="document-delete" permission="Delete" label="menu.selected-items.delete" notAspect="hwf:hybridWorkflow,sys:undeletable" />
         <action type="action-link" id="onActionCloudSync" asset="document" icon="document-cloud-sync"  permission="CreateChildren" label="menu.selected-items.cloudSync" notAspect="sync:syncSetMemberNode" syncMode="ON_PREMISE" />
         <action type="action-link" id="onActionCloudSyncRequest" icon="document-request-sync" label="menu.selected-items.cloudRequestSync" hasAspect="sync:syncSetMemberNode" syncMode="ON_PREMISE" />
      </multi-select>

   </config>
</alfresco-config>